Initial setup for Coverity database server on krbdev
----------------------------------------------------

Create user coverity with "adduser --disabled-password coverity"
Copy to /home/coverity and chown to coverity:
  /root/.k5login
  /etc/apache2/ssl.crt/server.crt
  /etc/apache2/ssl.key/server.key
(Remaining steps performed as user coverity)
Copy linux64 tarfile from /afs/athena.mit.edu/astaff/project/krbdev/coverity
Extract tarfile in $HOME
Copy license file to $HOME/prevent-linux64-4.3.0/bin
Add to $HOME/.bash_profile or $HOME/.profile:
  PATH=${PATH}:$HOME/prevent-linux64-4.3.0/bin
cov-install-gui --datadir $HOME/krb5db --product krb5 --password <omitted> \
  --port none --secure-port 60000 --rsa-certificate-path $HOME/server.crt \
  --rsa-key-path $HOME/server.key
Copy backup from this directory into $HOME/backup (mode 755)
Run "crontab coverity.krbdev.crontab" in this directory.

Build machine setup (Unix)
--------------------------

Make sure Subversion is installed and a decent set of development tools
Create a new account (name unimportant); example:
  adduser --disabled-password krb5build
Install Coverity somewhere on the build host (possibly in the krb5build home)
Configure the Coverity compilers; example:
  cov-configure --compiler /usr/bin/gcc --comptype gcc
  cov-configure --compiler /usr/bin/cc --comptype gcc
(Remaining steps performed as user krb5build)
Run "ssh-keygen -N ''"
Add $HOME/.ssh/id_rsa.pub to coverity@krbdev.mit.edu:$HOME/.ssh/authorized_keys
Add coverity@krbdev.mit.edu:/etc/ssh/ssh_host_rsa_key.pub to .ssh/known_hosts
 and prefix it with "krbdev.mit.edu "
Run "ssh-keygen -H" and remove .ssh/known_hosts.old
Run "svn co svn://anonsvn.mit.edu/krb5/trunk krb5"
Add to $HOME/.bash_profile or $HOME/.profile:
  PATH=${PATH}:/path/to/coverity/bin
Copy store-backup from this directory into $HOME/store-backup (mode 755)
Copy build from this directory into $HOME/build (mode 755)
Run "crontab -e" and edit to say:
  PATH=/usr/bin:/bin:/path/to/coverity/bin

  # m h  dom mon dow   command
   0  3  *   *   *     $HOME/store-backup >> $HOME/backuplog 2>&1
  30  3  *   *   *     $HOME/build >> $HOME/buildlog 2>&1
Stagger the build time a bit for different build machines
